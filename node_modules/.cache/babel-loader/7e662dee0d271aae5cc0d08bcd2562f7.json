{"ast":null,"code":"import _classCallCheck from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quintype/work/mario_react/src/grid.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\n\nimport './index.css';\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  function Grid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Grid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      positionMaleIcon: \"i0j0\",\n      positionKeys: [\"i4j1\", \"i0j3\", \"i2j2\"] // maleIcon: <i className=\"fa fa-male\"></i>,\n      // keyIcon: <i class=\"fa fa-key\"></i>\n\n    };\n\n    _this.handleKeyPress = function (e) {\n      var myTab = document.getElementById(\"table\");\n      var i = 0,\n          j = 0;\n\n      if (e.key == 'ArrowDown') {// myTab.document.getElement\n        //   j=j++;\n        //   myTab.cells[j]=this.setState({positionMaleIcon:\"i1j1\"})\n        // for (const i = 0; i < myTab.rows.length - 1; i++) {\n        //  for (const j = 0; j < myTab.cells.length;j++) {   \n        //      alert(myTab.rows[i][j]);\n        //if(this.state.positionKeys == \"\")\n        //     //  this.setState({positionMaleIcon:\"i2j1\"});\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    // handleKeyPress = (event) => {\n    //     if(event.key == 'ArrowDown'){\n    //       alert('enter press here! ')\n    //     }\n    //   }\n    value: function render() {\n      var tBody = [];\n      var maleIcon = React.createElement(\"i\", {\n        className: \"fa fa-male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n      var keyIcon = React.createElement(\"i\", {\n        class: \"fa fa-key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n\n      for (var i = 0; i < 4; i++) {\n        var newTr = [];\n\n        for (var j = 0; j < 4; j++) {\n          var id = \"i\".concat(i, \"j\").concat(j);\n\n          if (id == this.state.positionMaleIcon) {\n            var newCell = React.createElement(\"td\", {\n              id: id,\n              onKeyDown: this.handleKeyPress,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, maleIcon);\n            newTr.push(newCell);\n          } else if (id == this.state.positionKeys[i][j]) {\n            var _newCell = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, keyIcon);\n\n            newTr.push(_newCell);\n          } else {\n            var _newCell2 = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            });\n\n            newTr.push(_newCell2);\n          }\n        }\n\n        tBody.push(newTr);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, tBody.map(function (tr) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, tr.map(function (cell) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, cell);\n        }));\n      }))));\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nexport default Grid;","map":{"version":3,"sources":["/home/quintype/work/mario_react/src/grid.js"],"names":["React","ReactDOM","Grid","state","positionMaleIcon","positionKeys","handleKeyPress","e","myTab","document","getElementById","i","j","key","tBody","maleIcon","keyIcon","newTr","id","newCell","push","map","tr","cell","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,aAAP;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,gBAAgB,EAAE,MADd;AAEJC,MAAAA,YAAY,EAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAFX,CAIJ;AACA;;AALI,K;;UAQRC,c,GAAiB,UAAAC,CAAC,EAAI;AAErB,UAAMC,KAAK,GAACC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AAEA,UAAMC,CAAC,GAAC,CAAR;AAAA,UAAUC,CAAC,GAAC,CAAZ;;AAEG,UAAIL,CAAC,CAACM,GAAF,IAAS,WAAb,EAA0B,CACtB;AACJ;AAEA;AACI;AACA;AACA;AACQ;AACR;AAEH;AAEJ,K;;;;;;;AAGD;AACA;AACA;AACA;AACA;6BAES;AACL,UAAMC,KAAK,GAAG,EAAd;AACJ,UAAMC,QAAQ,GAAG;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AACA,UAAMC,OAAO,GAAG;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;;AACA,WAAM,IAAIL,CAAC,GAAE,CAAb,EAAiBA,CAAC,GAAC,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvB,YAAMM,KAAK,GAAC,EAAZ;;AACA,aAAM,IAAIL,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAAC,CAAjB,EAAoBA,CAAC,EAArB,EAAwB;AACpB,cAAMM,EAAE,cAAOP,CAAP,cAAYC,CAAZ,CAAR;;AACA,cAAGM,EAAE,IAAI,KAAKf,KAAL,CAAWC,gBAApB,EACA;AACI,gBAAMe,OAAO,GAAG;AAAI,cAAA,EAAE,EAAED,EAAR;AAAY,cAAA,SAAS,EAAE,KAAKZ,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6CS,QAA7C,CAAhB;AACAE,YAAAA,KAAK,CAACG,IAAN,CAAWD,OAAX;AACH,WAJD,MAKK,IAAGD,EAAE,IAAI,KAAKf,KAAL,CAAWE,YAAX,CAAwBM,CAAxB,EAA2BC,CAA3B,CAAT,EAAwC;AACzC,gBAAMO,QAAO,GAAG;AAAI,cAAA,EAAE,EAAED,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaF,OAAb,CAAhB;;AACAC,YAAAA,KAAK,CAACG,IAAN,CAAWD,QAAX;AACH,WAHI,MAID;AACA,gBAAMA,SAAO,GAAG;AAAI,cAAA,EAAE,EAAED,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;;AACAD,YAAAA,KAAK,CAACG,IAAN,CAAWD,SAAX;AACH;AAEJ;;AACDL,QAAAA,KAAK,CAACM,IAAN,CAAWH,KAAX;AACH;;AACG,aAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAO,QAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEOH,KAAK,CAACO,GAAN,CAAU,UAACC,EAAD,EAAQ;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEHA,EAAE,CAACD,GAAH,CAAO,UAAAE,IAAI;AAAA,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAL,CAAJ;AAAA,SAAX,CAFG,CAAP;AAKH,OAND,CAFP,CADJ,CAFJ,CAFJ;AAmBH;;;;EAjFcvB,KAAK,CAACwB,S;;AAmFzB,eAAetB,IAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\nimport './index.css';\n\nclass Grid extends React.Component {\n    state = {\n        positionMaleIcon :\"i0j0\",\n        positionKeys : [\"i4j1\", \"i0j3\", \"i2j2\"]\n      \n        // maleIcon: <i className=\"fa fa-male\"></i>,\n        // keyIcon: <i class=\"fa fa-key\"></i>\n    }\n   \n    handleKeyPress = e => {\n      \n     const myTab=document.getElementById(\"table\");\n\n     const i=0,j=0;\n   \n        if (e.key == 'ArrowDown') {\n            // myTab.document.getElement\n        //   j=j++;\n\n        //   myTab.cells[j]=this.setState({positionMaleIcon:\"i1j1\"})\n            // for (const i = 0; i < myTab.rows.length - 1; i++) {\n            //  for (const j = 0; j < myTab.cells.length;j++) {   \n            //      alert(myTab.rows[i][j]);\n                    //if(this.state.positionKeys == \"\")\n            //     //  this.setState({positionMaleIcon:\"i2j1\"});\n         \n        }\n       \n    };\n\n\n    // handleKeyPress = (event) => {\n    //     if(event.key == 'ArrowDown'){\n    //       alert('enter press here! ')\n    //     }\n    //   }\n    \n    render() {\n        const tBody = [];\n    const maleIcon = <i className=\"fa fa-male\"></i>;\n    const keyIcon = <i class=\"fa fa-key\"></i>;\n    for ( let i =0 ; i<4; i++ ){\n        const newTr=[];\n        for ( let j=0; j<4; j++){\n            const id = `i${i}j${j}`;\n            if(id == this.state.positionMaleIcon)\n            {\n                const newCell = <td id={id} onKeyDown={this.handleKeyPress}>{maleIcon}</td>\n                newTr.push(newCell);\n            }\n            else if(id == this.state.positionKeys[i][j]) {\n                const newCell = <td id={id}>{keyIcon}</td>\n                newTr.push(newCell);\n            }\n            else{\n                const newCell = <td id={id}></td>\n                newTr.push(newCell);\n            }\n           \n        }\n        tBody.push(newTr);\n    }\n        return (\n\n            <div className=\"gridContainer\">\n\n                <table id=\"table\">\n                    <tbody>\n                        {\n                           tBody.map((tr) => {\n                               return <tr>\n                                   {\n                                   tr.map(cell => <td>{cell}</td>)\n                                   }\n                               </tr>\n                           }) \n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Grid;"]},"metadata":{},"sourceType":"module"}