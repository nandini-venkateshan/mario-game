{"ast":null,"code":"import _classCallCheck from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/quintype/work/mario-game/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/quintype/work/mario-game/src/grid.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\n\nimport './index.css';\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _this.handleKeyPress = function (event) {\n      var pos = _this.state.positionMaleIcon;\n      var y = parseInt(pos.split('j')[1]);\n      var x = parseInt(pos.split('j')[0].split('i')[1]);\n\n      switch (event.key) {\n        case \"ArrowDown\":\n          if (x < 4) {\n            x = x + 1;\n          }\n\n          break;\n\n        case \"ArrowUp\":\n          if (x > 0) {\n            x = x - 1;\n          }\n\n          break;\n\n        case \"ArrowLeft\":\n          if (y > 0) {\n            y = y - 1;\n          }\n\n          break;\n\n        case \"ArrowRight\":\n          if (y < 4) {\n            y = y + 1;\n          }\n\n          break;\n      }\n\n      _this.setState({\n        positionMaleIcon: \"i\".concat(x, \"j\").concat(y)\n      });\n\n      console.log(_this.state.positionMaleIcon);\n    };\n\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    document.addEventListener('keydown', function (event) {\n      this.handleKeyPress(event);\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    _this.state = {\n      positionMaleIcon: \"i0j0\",\n      positionKeys: [\"i0j3\", \"i2j3\", \"i1j1\", \"i3j0\"]\n    };\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var tBody = [];\n      var maleIcon = React.createElement(\"i\", {\n        className: \"fa fa-male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n      var keyIcon = React.createElement(\"i\", {\n        class: \"fa fa-key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n\n      for (var i = 0; i < 4; i++) {\n        var newTr = [];\n\n        for (var j = 0; j < 4; j++) {\n          var id = \"i\".concat(i, \"j\").concat(j);\n\n          if (id == this.state.positionMaleIcon) {\n            var newCell = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, maleIcon);\n            newTr.push(newCell);\n          } else if (this.state.positionKeys.includes(id)) {\n            var _newCell = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, keyIcon);\n\n            newTr.push(_newCell);\n          } else {\n            var _newCell2 = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            });\n\n            newTr.push(_newCell2);\n          }\n        }\n\n        tBody.push(newTr);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, tBody.map(function (tr) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, tr);\n      }))));\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nexport default Grid;","map":{"version":3,"sources":["/home/quintype/work/mario-game/src/grid.js"],"names":["React","ReactDOM","Grid","props","handleKeyPress","event","pos","state","positionMaleIcon","y","parseInt","split","x","key","setState","console","log","bind","document","addEventListener","positionKeys","tBody","maleIcon","keyIcon","i","newTr","j","id","newCell","push","includes","map","tr","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\nimport './index.css';\n\nclass Grid extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        document.addEventListener('keydown', function (event) {\n            this.handleKeyPress(event);\n        }.bind(this));\n        this.state = {\n            positionMaleIcon: \"i0j0\",\n            positionKeys: [\"i0j3\", \"i2j3\", \"i1j1\", \"i3j0\"]\n        }\n    }\n    handleKeyPress = (event) => {\n        const pos = this.state.positionMaleIcon;\n        let y = parseInt(pos.split('j')[1]);\n        let x = parseInt(pos.split('j')[0].split('i')[1]);\n        switch(event.key) {\n            case \"ArrowDown\" :\n                if( x< 4) {\n                    x=x+1;\n                }\n                break;\n            case \"ArrowUp\" :\n                if(x >0 ){\n                    x=x-1;\n                }\n                break;\n            case \"ArrowLeft\" :\n                if(y>0){\n                    y=y-1;\n                }\n                break;\n            case \"ArrowRight\" :\n                if(y<4){\n                    y=y+1;\n                }\n                break;\n        }\n        this.setState({ positionMaleIcon : `i${x}j${y}`});\n        console.log(this.state.positionMaleIcon);\n    };\n\n    render() {\n        const tBody = [];\n\n        const maleIcon = <i className=\"fa fa-male\"></i>;\n        const keyIcon = <i class=\"fa fa-key\"></i>;\n        for (let i = 0; i < 4; i++) {\n            const newTr = [];\n            for (let j = 0; j < 4; j++) {\n                const id = `i${i}j${j}`;\n                if (id == this.state.positionMaleIcon) {\n                    const newCell = <td id={id} >{maleIcon}</td>\n                    newTr.push(newCell);\n                }\n                else if (this.state.positionKeys.includes(id)) {\n                    const newCell = <td id={id}>{keyIcon}</td>\n                    newTr.push(newCell);\n                }\n                else {\n                    const newCell = <td id={id}></td>\n                    newTr.push(newCell);\n                }\n\n            }\n            tBody.push(newTr);\n        }\n        return (\n\n            <div className=\"gridContainer\">\n\n                <table id=\"table\">\n                    <tbody>\n                        {\n                            tBody.map((tr) => {\n                                return <tr>\n                                    {\n                                        tr\n                                    }\n                                </tr>\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Grid;"]},"metadata":{},"sourceType":"module"}