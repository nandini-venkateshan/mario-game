{"ast":null,"code":"import _classCallCheck from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/quintype/work/mario_react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/quintype/work/mario_react/src/grid.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\n\nimport './index.css';\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  //     handleKeyPress = e => {\n  // if (e.key == 'ArrowDown') {\n  //         alert(\"hi\");\n  //     myTab.document.getElement\n  //      j=j++;\n  //     myTab.cells[j]=this.setState({positionMaleIcon:\"i1j1\"})\n  //     for (const i = 0; i < myTab.rows.length - 1; i++) {\n  //      for (const j = 0; j < myTab.cells.length;j++) {   \n  //  alert(myTab.rows[i][j]);\n  //     if(this.state.positionKeys == \"\")\n  //       this.setState({positionMaleIcon:\"i2j1\"});\n  //        }\n  //      };\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _this.handleKeyPress = function (event) {\n      if (event.key == 'ArrowDown') {\n        alert('enter press here! ');\n      }\n    };\n\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    document.addEventListener('keydown', function (event) {\n      this.handleKeyPress(event);\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    _this.state = {\n      positionMaleIcon: \"i0j0\",\n      positionKeys: [\"i0j3\", \"i2j3\", \"i1j1\", \"i3j3\"] // maleIcon: <i className=\"fa fa-male\"></i>,\n      // keyIcon: <i class=\"fa fa-key\"></i>\n\n    };\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var tBody = [];\n      var maleIcon = React.createElement(\"i\", {\n        className: \"fa fa-male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n      var keyIcon = React.createElement(\"i\", {\n        class: \"fa fa-key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n\n      for (var i = 0; i < 4; i++) {\n        var newTr = [];\n\n        for (var j = 0; j < 4; j++) {\n          var id = \"i\".concat(i, \"j\").concat(j);\n\n          if (id == this.state.positionMaleIcon) {\n            var newCell = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, maleIcon);\n            newTr.push(newCell);\n          } else if (this.state.positionKeys.every(id)) {\n            var _newCell = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, keyIcon);\n\n            newTr.push(_newCell);\n          } else {\n            var _newCell2 = React.createElement(\"td\", {\n              id: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            });\n\n            newTr.push(_newCell2);\n          }\n        }\n\n        tBody.push(newTr);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, tBody.map(function (tr) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, tr.map(function (cell) {\n          return React.createElement(\"td\", {\n            tabindex: \"1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, cell);\n        }));\n      }))));\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nexport default Grid;","map":{"version":3,"sources":["/home/quintype/work/mario_react/src/grid.js"],"names":["React","ReactDOM","Grid","props","handleKeyPress","event","key","alert","bind","document","addEventListener","state","positionMaleIcon","positionKeys","tBody","maleIcon","keyIcon","i","newTr","j","id","newCell","push","every","map","tr","cell","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import FontAwesome from '../node_modules/font-awesome/css/font-awesome.min.css'\nimport './index.css';\n\nclass Grid extends React.Component {\n    \n//     handleKeyPress = e => {\n// if (e.key == 'ArrowDown') {\n//         alert(\"hi\");\n//     myTab.document.getElement\n//      j=j++;\n\n//     myTab.cells[j]=this.setState({positionMaleIcon:\"i1j1\"})\n//     for (const i = 0; i < myTab.rows.length - 1; i++) {\n//      for (const j = 0; j < myTab.cells.length;j++) {   \n//  alert(myTab.rows[i][j]);\n//     if(this.state.positionKeys == \"\")\n//       this.setState({positionMaleIcon:\"i2j1\"});\n         \n//        }\n//      };\n\n    constructor(props) {\n        super(props);\n        this.handleKeyPress= this.handleKeyPress.bind(this);\n        document.addEventListener('keydown', function(event) {\n            this.handleKeyPress(event);\n        }.bind(this));\n        this.state = {\n            positionMaleIcon :\"i0j0\",\n            positionKeys : [\"i0j3\", \"i2j3\",\"i1j1\", \"i3j3\"]\n          \n            // maleIcon: <i className=\"fa fa-male\"></i>,\n            // keyIcon: <i class=\"fa fa-key\"></i>\n        }\n    }\n    handleKeyPress = (event) => {\n        if(event.key == 'ArrowDown'){\n          alert('enter press here! ')\n        }\n    };\n\n    render() {\n        const tBody = [];\n       \n    const maleIcon = <i className=\"fa fa-male\"></i>;\n    const keyIcon = <i class=\"fa fa-key\"></i>;\n    for ( let i =0 ; i<4; i++ ){\n        const newTr=[];\n        for ( let j=0; j<4; j++){\n            const id = `i${i}j${j}`;\n        \n            if(id == this.state.positionMaleIcon)\n            {\n                const newCell = <td id={id} >{maleIcon}</td>\n                newTr.push(newCell);\n            }\n            else if(this.state.positionKeys.every(id)) {\n                const newCell = <td id={id}>{keyIcon}</td>\n                newTr.push(newCell);\n            }\n            else {\n                const newCell = <td id={id}></td>\n                newTr.push(newCell);\n            }\n           \n        }\n        tBody.push(newTr);\n    }\n        return (\n\n            <div className=\"gridContainer\">\n\n                <table id=\"table\">\n                    <tbody>\n                        {\n                           tBody.map((tr) => {\n                               return <tr>\n                                   {\n                                   tr.map(cell => <td tabindex=\"1\">{cell}</td>)\n                                   }\n                               </tr>\n                           }) \n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Grid;"]},"metadata":{},"sourceType":"module"}